<div class="container mt-4">
  <div class="row">
    <div class="col-md-4">
      <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Conversations</h5>
          <%= link_to "New Chat", ai_agent_conversations_path(@agent), method: :post, class: "btn btn-sm btn-primary", data: { turbo_method: :post } %>
        </div>
        <div class="card-body p-0">
          <div class="list-group list-group-flush" id="conversations-list">
            <%= render partial: "ai/conversations/conversation", collection: @agent.conversations.where(user: current_user).order(created_at: :desc), locals: { active: @conversation } %>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-md-8">
      <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="mb-0"><%= @conversation.title %></h5>
          <small><%= @agent.name %></small>
        </div>
        
        <div class="card-body">
          <div class="chat-messages p-3" style="height: 400px; overflow-y: auto;" id="messages" data-controller="scroll">
            <%= turbo_stream_from "conversation_#{@conversation.id}" %>
            <div id="message-list">
              <%= render partial: "ai/messages/message", collection: @messages %>
            </div>
          </div>
        </div>
        
        <div class="card-footer">
          <%= render "ai/messages/form", agent: @agent, conversation: @conversation, message: Ai::Message.new %>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="container-fluid py-4">
  <div class="row">
    <!-- Left sidebar - Agent details and conversations list -->
    <div class="col-md-4 col-lg-3 d-flex flex-column" style="height: calc(100vh - 80px);">
      <!-- Agent details card -->
      <div class="card shadow-sm mb-3">
        <div class="card-body p-3">
          <div class="d-flex align-items-center mb-3">
            <% if current_user.avatar.present? %>
              <%= image_tag(current_user.avatar.variant(resize_to_limit: [50, 50]), alt: @agent.name , class: "img-fluid rounded-circle me-3") %>
            <% else %>
              <%= image_tag("default_avatar.png", alt: @agent.name, class: "img-fluid rounded-circle me-3") %>
            <% end %> 
            <div>
              <h5 class="mb-0"><%= @agent.name.humanize %></h5>
              <span class="badge bg-success">Online</span>
            </div>
          </div>
          
          <div class="small text-muted mb-3">
            <%= @agent.description %>
          </div>
          
          <div class="d-grid">
            <%= link_to 'Start New Conversation', ai_agent_conversations_path(@agent), method: :post, class: 'btn btn-primary', data: { turbo_method: :post } %>
          </div>
        </div>
      </div>
      
      <!-- Conversations list -->
      <div class="card shadow-sm flex-grow-1 d-flex flex-column">
        <div class="card-header bg-white py-3">
          <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Conversations</h5>
            <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#conversationsFilter">
              <i class="bi bi-funnel"></i>
            </button>
          </div>
          
          <div class="collapse mt-2" id="conversationsFilter">
            <div class="input-group input-group-sm">
              <input type="text" class="form-control" placeholder="Search conversations...">
              <button class="btn btn-outline-secondary" type="button">
                <i class="bi bi-search"></i>
              </button>
            </div>
          </div>
        </div>
        
        <div class="card-body p-0 overflow-auto flex-grow-1" style="max-height: 100%;">
          <div class="list-group list-group-flush border-bottom" id="conversations-list">
            <% @agent.conversations.where(user: current_user).order(created_at: :desc).each do |conversation| %>
              <%= link_to ai_agent_conversation_path(@agent, conversation), 
                  class: "list-group-item list-group-item-action conversation-link d-flex align-items-center p-3 #{params[:conversation_id].to_s == conversation.id.to_s ? 'active' : ''}",
                  data: { 
                    turbo_stream: true,
                    action: "click->conversation#select",
                    conversation_id: conversation.id,
                    conversation_title: conversation.title || "Conversation #{conversation.id}",
                    turbo_action: "advance"
                  } do %>
                <div class="flex-grow-1">
                  <h6 class="mb-1 conversation-title"><%= conversation.title || "Conversation #{conversation.id}" %></h6>
                  <p class="mb-0 small text-muted"><%= conversation.messages.last&.content&.truncate(50) || "No messages yet" %></p>
                  <small class="text-muted"><%= time_ago_in_words(conversation.updated_at) %> ago</small>
                </div>
              <% end %>
            <% end %>
            
            <% if @agent.conversations.where(user: current_user).empty? %>
              <div class="text-center py-5 text-muted">
                <i class="bi bi-chat-dots fs-1 mb-3"></i>
                <p>No conversations yet</p>
                <small>Start a new conversation to begin chatting</small>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Right side - Chat area -->
    <div class="col-md-8 col-lg-9 d-flex flex-column" style="height: calc(100vh - 80px);">
      <div class="card shadow-sm h-100 d-flex flex-column">
        <!-- Chat header -->
        <div class="card-header bg-white py-3 border-bottom">
          <div class="d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
              <h5 class="mb-0" id="current-conversation-title">
                <% if @conversation %>
                  <%= @conversation.title || "Conversation #{@conversation.id}" %>
                <% else %>
                  Select a conversation
                <% end %>
              </h5>
              <span class="badge bg-primary ms-2 conversation-status <%= @conversation ? '' : 'd-none' %>">Active</span>
            </div>
            <div class="btn-group">
              <button class="btn btn-sm btn-outline-secondary" title="Settings">
                <i class="bi bi-gear"></i>
              </button>
              <button class="btn btn-sm btn-outline-secondary" title="Information">
                <i class="bi bi-info-circle"></i>
              </button>
            </div>
          </div>
        </div>
        
        <!-- Chat messages area -->
        <div class="card-body p-0 overflow-auto flex-grow-1" id="messages-container">
          <% if @conversation %>
            <%= turbo_frame_tag "conversation_messages", src: ai_agent_conversation_messages_path(@agent, @conversation) do %>
              <div class="d-flex justify-content-center p-5">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            <% end %>
          <% else %>
            <div class="d-flex flex-column align-items-center justify-content-center h-100 text-center text-muted p-4" id="empty-state">
              <div class="mb-4">
                <i class="bi bi-robot fs-1"></i>
              </div>
              <h4><%= @agent.name.humanize %></h4>
              <p class="mb-4"><%= @agent.instructions %></p>
              <div class="bg-light rounded p-3 mb-3 w-75">
                <h6>Tools</h6>
                <p class="small mb-0"><%= @agent.tools.present? ? @agent.tools : "No specific tools configured" %></p>
              </div>
              <p>Choose a conversation from the list or create a new one to start chatting</p>
            </div>
          <% end %>
        </div>
        
        <!-- Chat input area -->
        <div class="card-footer bg-white p-3 border-top <%= @conversation ? '' : 'd-none' %>" id="message-form-container">
          <%= form_with url: ai_agent_conversation_messages_path(@agent, @conversation), method: :post, id: "message-form", class: "d-flex", data: { controller: "message-form", action: "turbo:submit-end->message-form#reset" } do |form| %>
            <div class="input-group">
              <%= form.text_area :content, class: "form-control", placeholder: "Type your message...", rows: 1, id: "message-input", data: { action: "input->message-form#autoResize keydown->message-form#handleKeydown" } %>
              <button class="btn btn-primary" type="submit">
                <i class="bi bi-send"></i>
              </button>
            </div>
          <% end %>
          <div class="d-flex justify-content-between align-items-center mt-2">
            <div class="small text-muted">
              <i class="bi bi-info-circle"></i> Press Enter to send, Shift+Enter for new line
            </div>
            <div>
              <button class="btn btn-sm btn-link text-muted p-0" title="Upload file">
                <i class="bi bi-paperclip"></i>
              </button>
              <button class="btn btn-sm btn-link text-muted p-0 ms-2" title="Voice message">
                <i class="bi bi-mic"></i>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<%= turbo_stream_from "agent_#{@agent.id}_conversations" %>
<% if @conversation %>
  <%= turbo_stream_from "conversation_#{@conversation.id}_messages" %>
<% end %>

<%= turbo_frame_tag "conversation_messages", target: "_top" %>

<script>
  document.addEventListener('turbo:load', function() {
    setupConversationHandlers();
  });
  
  document.addEventListener('turbo:render', function() {
    setupConversationHandlers();
  });
  
  function setupConversationHandlers() {
    // Auto-resize textarea as user types
    const messageInput = document.getElementById('message-input');
    if (messageInput) {
      messageInput.addEventListener('input', function() {
        this.style.height = 'auto';
        this.style.height = (this.scrollHeight) + 'px';
      });
      
      // Handle Enter key to submit form
      messageInput.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
          e.preventDefault();
          document.getElementById('message-form').requestSubmit();
        }
      });
    }
    
    // Handle conversation selection
    const conversationLinks = document.querySelectorAll('.conversation-link');
    conversationLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Update active conversation
        document.querySelectorAll('.conversation-link').forEach(l => l.classList.remove('active'));
        this.classList.add('active');
        
        // Get conversation data
        const conversationId = this.dataset.conversationId;
        const conversationTitle = this.dataset.conversationTitle;
        
        // Update conversation title
        document.getElementById('current-conversation-title').textContent = conversationTitle;
        document.querySelector('.conversation-status').classList.remove('d-none');
        
        // Show message form
        document.getElementById('message-form-container').classList.remove('d-none');
        
        // Hide empty state if visible
        const emptyState = document.getElementById('empty-state');
        if (emptyState) {
          emptyState.classList.add('d-none');
        }
        
        // Update URL without full page reload
        const url = this.getAttribute('href');
        history.pushState({ turbo: true, url: url }, '', url);
        
        // Fetch messages with Turbo Streams
        const messagesContainer = document.getElementById('messages-container');
        messagesContainer.innerHTML = `
          <div class="d-flex justify-content-center p-5">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
          </div>
        `;
        
        // Update the form action to point to the selected conversation
        const messageForm = document.getElementById('message-form');
        if (messageForm) {
          const agentId = window.location.pathname.split('/')[3];
          messageForm.action = `/ai/agents/${agentId}/conversations/${conversationId}/messages`;
        }
        
        // Fetch messages with Turbo Streams
        fetch(`${url}/messages`, {
          headers: {
            'Accept': 'text/vnd.turbo-stream.html',
            'X-Requested-With': 'XMLHttpRequest'
          }
        })
        .then(response => response.text())
        .then(html => {
          Turbo.renderStreamMessage(html);
        });
      });
    });
    
    // Scroll to bottom of messages container when messages are loaded
    const messagesContainer = document.querySelector('#messages-container');
    if (messagesContainer) {
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
  }
</script>

<style>
  .conversation-link {
    transition: all 0.2s ease;
    border-left: 3px solid transparent;
  }
  
  .conversation-link:hover {
    background-color: rgba(13, 110, 253, 0.05);
  }
  
  .conversation-link.active {
    background-color: rgba(13, 110, 253, 0.1);
    border-left: 3px solid #0d6efd;
  }
  
  #message-input {
    resize: none;
    max-height: 120px;
    overflow-y: auto;
  }
  
  .message {
    max-width: 80%;
    margin-bottom: 1rem;
  }
  
  .message-user {
    align-self: flex-end;
    background-color: #0d6efd;
    color: white;
    border-radius: 18px 18px 0 18px;
  }
  
  .message-agent {
    align-self: flex-start;
    background-color: #f0f2f5;
    color: #212529;
    border-radius: 18px 18px 18px 0;
  }
  
  .message-time {
    font-size: 0.75rem;
    color: rgba(0, 0, 0, 0.5);
  }
  
  .message-user .message-time {
    color: rgba(255, 255, 255, 0.7);
  }
</style>